---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";

import sampleImg from "../assets/img/sample.png";
---

<Layout title="Register">
    <section class="flex justify-center">
        <form id="login" class="flex flex-col w-full md:w-2/3 w-full">
            <div class="w-full m-2 flex flex-col justify-center">
                <!-- <label for="username">Username</label> -->
                <input
                    type="text"
                    name="username"
                    id="username"
                    class="md:w-2/3 m-2 p-1 border border-gray-400 outline-none focus:border-gray-900"
                    placeholder="Enter Your Username"
                    required
                />
            </div>
            <div
                id="password-section"
                class="w-full m-2 flex flex-col justify-center"
            >
                <div class="md:w-2/3 p-4">
                    <p class="p-2 mx-3 border-2 border-red-600">
                        <span class="font-semibold">NOTE:</span> Pick 4 PassPoint
                        from the images below
                    </p>
                    <p class="p-2 mx-3">
                        Picked PassPoint <span id="passpoint-counter">0/4</span>
                    </p>
                </div>
                <div class="flex flex-wrap justify-around md:w-2/3 my-3">
                    <Image
                        id="pwd"
                        src={sampleImg}
                        alt="passpoint"
                        class="btn-open-modal p-2"
                    />
                </div>
            </div>
            <div class="w-full m-2 flex flex-col justify-center">
                <!-- <input type="submit" value="Register"> -->
                <button
                    id="resetBtn"
                    type="button"
                    class="md:w-2/3 m-2 p-1 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                >
                    Reset
                </button>
                <button
                    id="submitBtn"
                    type="submit"
                    class="md:w-2/3 m-2 p-1 text-white bg-blue-700 disabled:cursor-none disabled:hover:bg-blue-100 disabled:bg-blue-100 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                    disabled
                >
                    Login
                </button>
            </div>
            <div>
                Not registered yet? <a href="/register"> Register Here</a>
            </div>
        </form>
    </section>
</Layout>
<script>
    const imgDetails = [];
    const passpointCounter = document.getElementById("passpoint-counter");
    const passwordDiv = document.getElementById("password-section");
    const pwd = document.getElementById("pwd");
    const loginButton = document.getElementById("submitBtn");
    const resetBtn = document.getElementById("resetBtn");
    const loginForm = document.getElementById("login");

    // Click points 
    pwd.addEventListener("click", (event) => {
        const containerRect = pwd.getBoundingClientRect();
        const clickedXPercentage =
            ((event.clientX - containerRect.left) / containerRect.width) * 100;
        const clickedYPercentage =
            ((event.clientY - containerRect.top) / containerRect.height) * 100;
        let passpoint = [clickedXPercentage, clickedYPercentage];

        imgDetails.push(passpoint);

        console.log(imgDetails);
        passpointCounter.textContent = `${imgDetails.length}/4`;
        // modals.classList.add("hidden");
        if (imgDetails.length >= 4) {
            passwordDiv.classList.add("pointer-events-none");
            pwd.classList.add("opacity-25");
            loginButton.toggleAttribute("disabled");
        }
    });

    // Reset Form
    resetBtn.addEventListener("click", () => {
        loginForm.reset();
        imgDetails.length = 0;
        passpointCounter.textContent = `${imgDetails.length}/4`;
        passwordDiv.classList.remove("pointer-events-none");
        pwd.classList.remove("opacity-25");
        loginButton.setAttribute("disabled", "");
    });

    // Login form
    loginForm.addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent the default form submission
        // Get the form data
        const formData = new FormData(event.target);
        formData.append("pwd", JSON.stringify(imgDetails));
        const res = await fetch("/api/login", {
            method: "POST",
            body: formData,
        });
        // console.log(await res.json());
        if (res.status == 200) {
            window.location.replace("/dashboard");
        }
        if (res.status == 401) {
            alert(`Invalid Credentials`);
        }
    });
</script>
